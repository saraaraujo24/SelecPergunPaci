{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Formulario\\\\Forms\\\\frontForms\\\\src\\\\buscarPaciente.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { Input, Alert } from \"@chakra-ui/react\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PiMagnifyingGlassLight } from \"react-icons/pi\";\nimport { Box } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Buscar() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [cpfInput, setCpfInput] = useState('');\n  const [showError, setShowError] = useState(false);\n  const [foundPost, setFoundPost] = useState(null); // Track the found post\n  console.log(posts);\n  useEffect(() => {\n    // Fetch initial posts on component mount\n    axios.get(\"http://localhost:8003/cadastro\").then(response => {\n      setPosts(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const searchByCpf = async cpf => {\n    setShowError(false); // Reset error state before fetching\n\n    try {\n      const response = await axios.get(\"http://localhost:8003/cadastro?cpf=\" + cpf);\n      const data = response.data;\n      setFoundPost(data.length > 0 ? data[0] : null); // Update found post\n      setShowError(data.length === 0); // Show error if not found\n    } catch (error) {\n      console.error(error);\n      setShowError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: showError && /*#__PURE__*/_jsxDEV(Alert, {\n        status: \"error\",\n        children: \"Usu\\xE1rio n\\xE3o encontrado no banco de dados.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      w: \"100%\",\n      ml: \"15%\",\n      mt: \"5%\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        className: \"wrap-input\",\n        id: \"cpfInput\",\n        value: cpfInput,\n        onChange: e => setCpfInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PiMagnifyingGlassLight, {\n        onClick: () => searchByCpf(cpfInput)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), foundPost && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"CPF: \", foundPost.cpf]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nome: \", foundPost.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, foundPost._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Buscar, \"e92TEKwRBOcYhWEpH4CIrsH/lgU=\");\n_c = Buscar;\nexport default Buscar;\n\n/*\r\n<div>\r\n<div>\r\n <p>\r\n      {showError && <Alert status=\"error\"\r\n      >Usuário não encontrado no banco de dados.</Alert>}\r\n </p>\r\n\r\n <Box w=\"100%\" ml=\"15%\" mt=\"5%\" >\r\n     \r\n  <Input className=\"wrap-input\" \r\n     id=\"cpfInput\"\r\n     value={cpfInput}\r\n     onChange={(e) => setCpfInput(e.target.value)}\r\n />\r\n      \r\n <PiMagnifyingGlassLight onClick={() => searchByCpf(cpfInput)} />       \r\n <div>\r\n     {filteredPosts.length > 0 && (\r\n     <div key={filteredPosts[0]._id}>\r\n         <p>CPF: {filteredPosts[0].cpf}</p>\r\n         <p>Nome: {filteredPosts[0].name}</p>\r\n     </div>\r\n     )}    \r\n\r\n </div>\r\n     </Box>            \r\n\r\n</div>\r\n</div>\r\n<div className=\"cont\">\r\n <center><h2 >Selecionar Pergunta</h2></center>\r\n   <HStack spacing=\"4\">\r\n     <Box w=\"100%\" ml=\"15%\" mt=\"5%\" >\r\n       \r\n     </Box>\r\n     <Box w=\"10%\"  mr=\"15%\" mt=\"5%\">\r\n       <p htmlFor=\"cpf\">Cadastrar Paciente</p>\r\n         <CadastroPaciente/>\r\n       </Box>\r\n   </HStack>\r\n</div><br></br><br></br>\r\n<div className=\"perguntas\">\r\n{filteredPosts.length === 0 ? (\r\n<p>Nenhum paciente encontrado.</p>\r\n) : (\r\nfilteredPosts.map((post) => (\r\n <div className=\"perguntas\" key={post._id}>\r\n     <p>{post.perguntas}</p>\r\n     <input\r\n         type=\"checkbox\"\r\n         id={post._id}\r\n         value={post._id}\r\n         checked={selectedQuestions.includes(post._id)}\r\n         onChange={handlePergunta}\r\n     />\r\n </div>\r\n))\r\n)}\r\n</div>*/\nvar _c;\n$RefreshReg$(_c, \"Buscar\");","map":{"version":3,"names":["Input","Alert","React","useState","useEffect","axios","PiMagnifyingGlassLight","Box","jsxDEV","_jsxDEV","Buscar","_s","posts","setPosts","cpfInput","setCpfInput","showError","setShowError","foundPost","setFoundPost","console","log","get","then","response","data","catch","error","searchByCpf","cpf","length","children","status","fileName","_jsxFileName","lineNumber","columnNumber","w","ml","mt","className","id","value","onChange","e","target","onClick","name","_id","_c","$RefreshReg$"],"sources":["C:/Github/Formulario/Forms/frontForms/src/buscarPaciente.js"],"sourcesContent":["import \"./App.css\"\r\nimport { Input, Alert } from \"@chakra-ui/react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PiMagnifyingGlassLight } from \"react-icons/pi\";\r\nimport { Box } from \"@chakra-ui/react\";\r\n\r\nfunction Buscar() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [cpfInput, setCpfInput] = useState('');\r\n  const [showError, setShowError] = useState(false);\r\n  const [foundPost, setFoundPost] = useState(null); // Track the found post\r\nconsole.log(posts)\r\n  useEffect(() => {\r\n    // Fetch initial posts on component mount\r\n    axios.get(\"http://localhost:8003/cadastro\")\r\n      .then((response) => {\r\n        setPosts(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const searchByCpf = async (cpf) => {\r\n    setShowError(false); // Reset error state before fetching\r\n\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8003/cadastro?cpf=\" + cpf);\r\n      const data = response.data;\r\n      setFoundPost(data.length > 0 ? data[0] : null); // Update found post\r\n      setShowError(data.length === 0); // Show error if not found\r\n    } catch (error) {\r\n      console.error(error);\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>\r\n        {showError && <Alert status=\"error\">Usuário não encontrado no banco de dados.</Alert>}\r\n      </p>\r\n\r\n      <Box w=\"100%\" ml=\"15%\" mt=\"5%\">\r\n        <Input className=\"wrap-input\" id=\"cpfInput\" value={cpfInput} onChange={(e) => setCpfInput(e.target.value)} />\r\n        <PiMagnifyingGlassLight onClick={() => searchByCpf(cpfInput)} />\r\n      </Box>\r\n\r\n      {foundPost && (\r\n        <div key={foundPost._id}>\r\n          <p>CPF: {foundPost.cpf}</p>\r\n          <p>Nome: {foundPost.name}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buscar;\r\n\r\n/*\r\n<div>\r\n<div>\r\n <p>\r\n      {showError && <Alert status=\"error\"\r\n      >Usuário não encontrado no banco de dados.</Alert>}\r\n </p>\r\n\r\n <Box w=\"100%\" ml=\"15%\" mt=\"5%\" >\r\n     \r\n  <Input className=\"wrap-input\" \r\n     id=\"cpfInput\"\r\n     value={cpfInput}\r\n     onChange={(e) => setCpfInput(e.target.value)}\r\n />\r\n      \r\n <PiMagnifyingGlassLight onClick={() => searchByCpf(cpfInput)} />       \r\n <div>\r\n     {filteredPosts.length > 0 && (\r\n     <div key={filteredPosts[0]._id}>\r\n         <p>CPF: {filteredPosts[0].cpf}</p>\r\n         <p>Nome: {filteredPosts[0].name}</p>\r\n     </div>\r\n     )}    \r\n\r\n </div>\r\n     </Box>            \r\n\r\n</div>\r\n</div>\r\n<div className=\"cont\">\r\n <center><h2 >Selecionar Pergunta</h2></center>\r\n   <HStack spacing=\"4\">\r\n     <Box w=\"100%\" ml=\"15%\" mt=\"5%\" >\r\n       \r\n     </Box>\r\n     <Box w=\"10%\"  mr=\"15%\" mt=\"5%\">\r\n       <p htmlFor=\"cpf\">Cadastrar Paciente</p>\r\n         <CadastroPaciente/>\r\n       </Box>\r\n   </HStack>\r\n</div><br></br><br></br>\r\n<div className=\"perguntas\">\r\n{filteredPosts.length === 0 ? (\r\n<p>Nenhum paciente encontrado.</p>\r\n) : (\r\nfilteredPosts.map((post) => (\r\n <div className=\"perguntas\" key={post._id}>\r\n     <p>{post.perguntas}</p>\r\n     <input\r\n         type=\"checkbox\"\r\n         id={post._id}\r\n         value={post._id}\r\n         checked={selectedQuestions.includes(post._id)}\r\n         onChange={handlePergunta}\r\n     />\r\n </div>\r\n))\r\n)}\r\n</div>*/\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}