{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Formulario\\\\Forms\\\\frontForms\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*import \"./App.css\"\r\nimport {FormLabel,Box,Input,HStack} from \"@chakra-ui/react\";\r\nimport CadastroPaciente from \"./CadastroP/cadasPaciente\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction App(){\r\n\r\n  const urlPerguntas = \"http://localhost:8003/questions\";\r\n  const urlCpfs = \"http://localhost:8003/cadastro\";\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchDados();\r\n  }, []);\r\n\r\n\r\nasync function fetchDados() {\r\n  try {\r\n    const [perguntasResponse, cpfsResponse] = await Promise.all([\r\n      axios.get(urlPerguntas),\r\n      axios.get(urlCpfs),\r\n    ]);\r\n\r\n    const perguntasData = perguntasResponse.data;\r\n    const cpfsData = cpfsResponse.data;\r\n\r\n    const combinedData = perguntasData.map((pergunta, index) => ({\r\n      ...pergunta,\r\n      cpf: cpfsData[index].cpf, // Assumindo que os dados possuem o mesmo índice\r\n    }));\r\n\r\n    setPosts(combinedData);\r\n  } catch (error) {\r\n    console.error(\"Erro ao buscar dados:\", error);\r\n  }\r\n}\r\n\r\n\r\n    return(\r\n        <div className=\"App\" >\r\n            <div className=\"cont\">\r\n           <center><h2 >Selecionar Pergunta</h2></center>\r\n               <HStack spacing=\"4\">\r\n                  <Box w=\"100%\" ml=\"15%\" mt=\"5%\" >\r\n                    <FormLabel htmlFor=\"cpf\">Buscar o Cpf do Paciente</FormLabel>\r\n                    <Input className=\"wrap-input\" \r\n                        id=\"cpf\" \r\n                        type=\"cpf\"\r\n                        placeholder=\"Digite sua resposta...\"\r\n                    />\r\n                  </Box>\r\n                  <Box w=\"10%\"  mr=\"15%\" mt=\"5%\">\r\n                    <FormLabel htmlFor=\"cpf\">Cadastrar Paciente</FormLabel>\r\n                       <CadastroPaciente/>\r\n                  </Box>\r\n                </HStack>\r\n                </div>\r\n                <div>\r\n        {posts.length === 0 ? (\r\n          <p>Carregando...</p>\r\n        ) : (\r\n          posts.map((post) => (\r\n            <div key={post._id}>\r\n              <p className=\"cen\">{post.perguntas}</p>\r\n              <p className=\"cen\">{post.cpf}</p>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n          \r\n        </div>\r\n    )\r\n}\r\nexport default App*/\nimport \"./App.css\";\n//import { FormLabel, Box, Input, HStack } from \"@chakra-ui/react\";\n//import CadastroPaciente from \"./CadastroP/cadasPaciente\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const urlPerguntas = \"http://localhost:8003/questions\";\n  const urlCpfs = \"http://localhost:8003/cadastro\";\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetchDados();\n  }, []);\n  async function fetchDados() {\n    try {\n      const perguntasResponse = await axios.get(urlPerguntas);\n      const perguntasData = perguntasResponse.data;\n\n      // Obter o _id da URL\n      const id = window.location.pathname.split(\"/\")[2];\n\n      // Filtrar os dados da pergunta pelo _id\n      const perguntaSelecionada = perguntasData.find(pergunta => pergunta._id === id);\n\n      // Buscar o CPF do paciente\n      const cpfResponse = await axios.get(`${urlCpfs}/${perguntaSelecionada.pacienteId}`);\n      const cpfData = cpfResponse.data;\n\n      // Combinar os dados\n      const combinedData = {\n        ...perguntaSelecionada,\n        cpf: cpfData.cpf\n      };\n      setPosts([combinedData]);\n    } catch (error) {\n      console.error(\"Erro ao buscar dados:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cen\",\n          children: post.perguntas\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cen\",\n          children: post.cpf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","urlPerguntas","urlCpfs","posts","setPosts","fetchDados","perguntasResponse","get","perguntasData","data","id","window","location","pathname","split","perguntaSelecionada","find","pergunta","_id","cpfResponse","pacienteId","cpfData","combinedData","cpf","error","console","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","post","perguntas","_c","$RefreshReg$"],"sources":["C:/Github/Formulario/Forms/frontForms/src/App.js"],"sourcesContent":["/*import \"./App.css\"\r\nimport {FormLabel,Box,Input,HStack} from \"@chakra-ui/react\";\r\nimport CadastroPaciente from \"./CadastroP/cadasPaciente\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction App(){\r\n\r\n  const urlPerguntas = \"http://localhost:8003/questions\";\r\n  const urlCpfs = \"http://localhost:8003/cadastro\";\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchDados();\r\n  }, []);\r\n\r\n\r\nasync function fetchDados() {\r\n  try {\r\n    const [perguntasResponse, cpfsResponse] = await Promise.all([\r\n      axios.get(urlPerguntas),\r\n      axios.get(urlCpfs),\r\n    ]);\r\n\r\n    const perguntasData = perguntasResponse.data;\r\n    const cpfsData = cpfsResponse.data;\r\n\r\n    const combinedData = perguntasData.map((pergunta, index) => ({\r\n      ...pergunta,\r\n      cpf: cpfsData[index].cpf, // Assumindo que os dados possuem o mesmo índice\r\n    }));\r\n\r\n    setPosts(combinedData);\r\n  } catch (error) {\r\n    console.error(\"Erro ao buscar dados:\", error);\r\n  }\r\n}\r\n\r\n\r\n    return(\r\n        <div className=\"App\" >\r\n            <div className=\"cont\">\r\n           <center><h2 >Selecionar Pergunta</h2></center>\r\n               <HStack spacing=\"4\">\r\n                  <Box w=\"100%\" ml=\"15%\" mt=\"5%\" >\r\n                    <FormLabel htmlFor=\"cpf\">Buscar o Cpf do Paciente</FormLabel>\r\n                    <Input className=\"wrap-input\" \r\n                        id=\"cpf\" \r\n                        type=\"cpf\"\r\n                        placeholder=\"Digite sua resposta...\"\r\n                    />\r\n                  </Box>\r\n                  <Box w=\"10%\"  mr=\"15%\" mt=\"5%\">\r\n                    <FormLabel htmlFor=\"cpf\">Cadastrar Paciente</FormLabel>\r\n                       <CadastroPaciente/>\r\n                  </Box>\r\n                </HStack>\r\n                </div>\r\n                <div>\r\n        {posts.length === 0 ? (\r\n          <p>Carregando...</p>\r\n        ) : (\r\n          posts.map((post) => (\r\n            <div key={post._id}>\r\n              <p className=\"cen\">{post.perguntas}</p>\r\n              <p className=\"cen\">{post.cpf}</p>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n          \r\n        </div>\r\n    )\r\n}\r\nexport default App*/\r\nimport \"./App.css\";\r\n//import { FormLabel, Box, Input, HStack } from \"@chakra-ui/react\";\r\n//import CadastroPaciente from \"./CadastroP/cadasPaciente\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const urlPerguntas = \"http://localhost:8003/questions\";\r\n  const urlCpfs = \"http://localhost:8003/cadastro\";\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchDados();\r\n  }, []);\r\n\r\n  async function fetchDados() {\r\n    try {\r\n      const perguntasResponse = await axios.get(urlPerguntas);\r\n      const perguntasData = perguntasResponse.data;\r\n\r\n      // Obter o _id da URL\r\n      const id = window.location.pathname.split(\"/\")[2];\r\n\r\n      // Filtrar os dados da pergunta pelo _id\r\n      const perguntaSelecionada = perguntasData.find((pergunta) => pergunta._id === id);\r\n\r\n      // Buscar o CPF do paciente\r\n      const cpfResponse = await axios.get(`${urlCpfs}/${perguntaSelecionada.pacienteId}`);\r\n      const cpfData = cpfResponse.data;\r\n\r\n      // Combinar os dados\r\n      const combinedData = {\r\n        ...perguntaSelecionada,\r\n        cpf: cpfData.cpf,\r\n      };\r\n\r\n      setPosts([combinedData]);\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar dados:\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* ... */}\r\n      <div>\r\n        {posts.length === 0 ? (\r\n          <p>Carregando...</p>\r\n        ) : (\r\n          posts.map((post) => (\r\n            <div key={post._id}>\r\n              <p className=\"cen\">{post.perguntas}</p>\r\n              <p className=\"cen\">{post.cpf}</p>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}