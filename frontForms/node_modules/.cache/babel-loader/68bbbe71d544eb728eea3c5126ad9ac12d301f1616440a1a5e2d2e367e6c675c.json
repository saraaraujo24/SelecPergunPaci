{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\MeusProjetosFinalizados\\\\AppLuiz\\\\SelecPergunPaci\\\\frontForms\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Box, HStack, Input, Alert } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CadastroPaciente from \"./CadastroP/cadasPaciente\";\nimport './CadastroP/cadasPac.css';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const url = \"http://localhost:8004/questions\";\n  const [posts, setPosts] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [cpfInput, setCpfInput] = useState(\"\");\n  const [infoPaciente, setInfoPaciente] = useState();\n  const [showError, setShowError] = useState(false);\n  function searchByCpf(cpf) {\n    setShowError(false);\n    setErrorType(\"\");\n    axios.get(`http://localhost:8004/cadastro?cpf=${cpf}`).then(response => {\n      const data = response.data;\n      if (data.length > 0) {\n        const matchingResult = data.find(item => item.cpf === cpf);\n        if (matchingResult) {\n          setInfoPaciente(matchingResult);\n        } else {\n          setErrorType(\"notFound\");\n          setShowError(true);\n        }\n      } else {\n        setErrorType(\"notFound\");\n        setShowError(true);\n      }\n    }).catch(error => {\n      console.error(error);\n      setErrorType(\"general\");\n      setShowError(true);\n    });\n  }\n  useEffect(() => {\n    if (cpfInput) {\n      searchByCpf(cpfInput);\n    }\n  }, [cpfInput]);\n  const handlePergunta = e => {\n    const isChecked = e.target.checked;\n    const questionId = e.target.value;\n    setSelectedQuestions(isChecked ? [...selectedQuestions, questionId] : selectedQuestions.filter(id => id !== questionId));\n  };\n  function getUser() {\n    axios.get(url).then(response => {\n      setPosts(response.data);\n    }).catch(error => console.log(error));\n  }\n  useEffect(() => {\n    getUser();\n  }, []);\n  async function sendDataToBackend() {\n    if (!cpfInput || selectedQuestions.length === 0) {\n      // Check for both conditions before showing error\n      setErrorType(\"both\");\n      setShowError(true);\n      return; // Prevent further execution if neither condition is met\n    }\n    try {\n      const cpf = infoPaciente;\n      const dataToSend = selectedQuestions.map(questionId => ({\n        perguntaId: questionId,\n        pergunta: posts.find(post => post._id === questionId).perguntas\n      }));\n      const response = await axios.post(\"http://localhost:8004/selecao\", {\n        selectedQuestions: dataToSend,\n        infoPaciente: cpf,\n        _id: cpfInput\n      });\n      console.log(\"Data sent to backend:\", response.data);\n      alert(\"Perguntas enviadas com sucesso!\");\n      setSelectedQuestions([]);\n      setCpfInput(\"\");\n      setInfoPaciente(null);\n    } catch (error) {\n      console.error(\"Error sending questions:\", error);\n      setErrorType(\"general\"); // Set error type to \"general\"\n      setShowError(true);\n      alert(\"Ocorreu um erro.Verifique se não há campo vazio.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Colum\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cont\",\n        children: [/*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Selecionar Pergunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          spacing: \"8\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            ml: \"5%\",\n            mt: \"5%\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Buscar Paciente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"wrap-input\",\n              id: \"cpfInput\",\n              value: cpfInput,\n              onChange: e => setCpfInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: showError && errorType === \"notFound\" && /*#__PURE__*/_jsxDEV(Alert, {\n                className: \"alert\",\n                status: \"error\",\n                children: \"*Usu\\xE1rio n\\xE3o encontrado no banco de dados.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), infoPaciente && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"CPF: \", infoPaciente.cpf]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Nome: \", infoPaciente.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this)]\n            }, infoPaciente._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            w: \"35%\",\n            mr: \"5%\",\n            mt: \"5%\",\n            children: [/*#__PURE__*/_jsxDEV(\"center\", {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                htmlFor: \"cpf\",\n                children: \"Cadastrar Paciente\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CadastroPaciente, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"perguntas\",\n        children: posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Carregando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"perguntas\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.perguntas\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: post._id,\n            value: post._id,\n            checked: selectedQuestions.includes(post._id),\n            onChange: handlePergunta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-Finalizar-form-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Finalizar-form-btn\",\n          onClick: sendDataToBackend,\n          children: \"Finalizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"d8hqB//X3jBNjM6XZtmDPIpz7aQ=\");\n_c = App;\nexport default App;\n\n/*import {Box,HStack,Input, Alert} from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport CadastroPaciente from \"./CadastroP/cadasPaciente\";\r\nimport './CadastroP/cadasPac.css';\r\nimport \"./App.css\"\r\n\r\n\r\nfunction App(){\r\n\r\n  \r\n  const url = \"http://localhost:8004/questions\";\r\n  \r\n  const [posts, setPosts] = useState('');\r\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\r\n  const [cpfInput, setCpfInput] = useState(\"\");\r\n  const [infoPaciente, setInfoPaciente] = useState();\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  function searchByCpf(cpf) {\r\n    setShowError(false);\r\n  \r\n    axios\r\n      .get(`http://localhost:8004/cadastro?cpf=${cpf}`)\r\n      .then((response) => {\r\n        const data = response.data;\r\n        if (data.length > 0) {\r\n         \r\n          const matchingResult = data.find((item) => item.cpf === cpf);\r\n  \r\n          if (matchingResult) {\r\n            setInfoPaciente(matchingResult); \r\n           \r\n          } else {\r\n            setShowError(true); \r\n          }\r\n        } else {\r\n          setShowError(true); \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setShowError(true);\r\n      });\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if (cpfInput) {\r\n      searchByCpf(cpfInput);\r\n    }\r\n  }, [cpfInput]);\r\n\r\n\r\n\r\n  const handlePergunta = (e) => {\r\n    const isChecked = e.target.checked;\r\n    const questionId = e.target.value;\r\n    \r\n    setSelectedQuestions(\r\n      isChecked\r\n        ? [...selectedQuestions, questionId,]\r\n        : selectedQuestions.filter((id) => id !== questionId,)\r\n    );\r\n  };\r\n\r\n\r\n\r\n  function getUser() {\r\n    axios.get(url)\r\n      .then((response) => {\r\n        setPosts(response.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getUser()\r\n  }, []);\r\n\r\n\r\n  async function sendDataToBackend() {\r\n    try { \r\n          \r\n      const cpf = infoPaciente\r\n      const dataToSend = selectedQuestions.map((questionId) => ({\r\n        perguntaId: questionId,\r\n        pergunta: posts.find((post) => post._id === questionId).perguntas,\r\n      \r\n      }));\r\n\r\n      const response = await axios.post(\"http://localhost:8004/selecao\", {\r\n        selectedQuestions: dataToSend,\r\n        infoPaciente:cpf,\r\n        _id:cpfInput\r\n      });\r\n\r\n        console.log(\"Data sent to backend:\", response.data);\r\n        alert(\"Perguntas enviadas com sucesso!\");\r\n        setSelectedQuestions([]);\r\n        setCpfInput(\"\");\r\n        setInfoPaciente(null); \r\n    } catch (error) {\r\n      console.error(\"Error sending questions:\", error);\r\n      alert(\"Ocorreu um erro ao enviar as perguntas. Tente novamente mais tarde.\");\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className=\"App\" >  \r\n    <div  className=\"Colum\"> \r\n      <div className=\"cont\">\r\n          <center><h2  >Selecionar Pergunta</h2></center>\r\n            <HStack spacing=\"8\">\r\n              <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n                <h4>Buscar Paciente</h4>      \r\n                <Input\r\n                  className=\"wrap-input\"\r\n                  id=\"cpfInput\"\r\n                  value={cpfInput}\r\n                  onChange={(e) => setCpfInput(e.target.value)}\r\n                />                \r\n                <p>\r\n                  {showError && (\r\n                    <Alert className=\"alert\" status=\"error\">*Usuário não encontrado no banco de dados.</Alert>\r\n                  )}\r\n                </p>\r\n                {infoPaciente && (\r\n                  <div key={infoPaciente._id}>\r\n                    <p>CPF: {infoPaciente.cpf}</p>\r\n                    <p>Nome: {infoPaciente.name}</p>\r\n                  </div>\r\n                )} \r\n              </Box>\r\n              <Box w=\"35%\"  mr=\"5%\" mt=\"5%\">\r\n                <center><h4 htmlFor=\"cpf\">Cadastrar Paciente</h4></center>\r\n                  <CadastroPaciente/>\r\n              </Box>\r\n            </HStack>\r\n      </div><br></br><br></br>\r\n          <div className=\"perguntas\">\r\n            {posts.length === 0 ? (\r\n              <p>Carregando...</p>\r\n            ) : (\r\n              posts.map((post) => (\r\n                <div className=\"perguntas\" key={post._id}>\r\n                <p>{post.perguntas}</p>\r\n                <input \r\n                  type=\"checkbox\"\r\n                  id={post._id} \r\n                  value={post._id}\r\n                  checked={selectedQuestions.includes(post._id)}\r\n                  onChange={handlePergunta}\r\n                />\r\n              </div>\r\n              ))\r\n            )}\r\n          </div>\r\n          <div className=\"container-Finalizar-form-btn\">\r\n            <button className=\"Finalizar-form-btn\" \r\n            onClick={sendDataToBackend} >Finalizar</button>\r\n          </div>\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","HStack","Input","Alert","React","useEffect","useState","axios","CadastroPaciente","jsxDEV","_jsxDEV","App","_s","url","posts","setPosts","selectedQuestions","setSelectedQuestions","cpfInput","setCpfInput","infoPaciente","setInfoPaciente","showError","setShowError","searchByCpf","cpf","setErrorType","get","then","response","data","length","matchingResult","find","item","catch","error","console","handlePergunta","e","isChecked","target","checked","questionId","value","filter","id","getUser","log","sendDataToBackend","dataToSend","map","perguntaId","pergunta","post","_id","perguntas","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","spacing","w","ml","mt","onChange","errorType","status","name","mr","htmlFor","type","includes","onClick","_c","$RefreshReg$"],"sources":["C:/Github/MeusProjetosFinalizados/AppLuiz/SelecPergunPaci/frontForms/src/App.js"],"sourcesContent":["import { Box, HStack, Input, Alert } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport CadastroPaciente from \"./CadastroP/cadasPaciente\";\r\nimport './CadastroP/cadasPac.css';\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const url = \"http://localhost:8004/questions\";\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\r\n  const [cpfInput, setCpfInput] = useState(\"\");\r\n  const [infoPaciente, setInfoPaciente] = useState();\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  function searchByCpf(cpf) {\r\n    setShowError(false);\r\n    setErrorType(\"\");\r\n    axios\r\n      .get(`http://localhost:8004/cadastro?cpf=${cpf}`)\r\n      .then((response) => {\r\n        const data = response.data;\r\n        if (data.length > 0) {\r\n          const matchingResult = data.find((item) => item.cpf === cpf);\r\n\r\n          if (matchingResult) {\r\n            setInfoPaciente(matchingResult);\r\n          } else {\r\n            setErrorType(\"notFound\");\r\n            setShowError(true);\r\n          }\r\n        } else {\r\n          setErrorType(\"notFound\");\r\n          setShowError(true);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setErrorType(\"general\");\r\n        setShowError(true);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (cpfInput) {\r\n      searchByCpf(cpfInput);\r\n    }\r\n  }, [cpfInput]);\r\n\r\n  const handlePergunta = (e) => {\r\n    const isChecked = e.target.checked;\r\n    const questionId = e.target.value;\r\n\r\n    setSelectedQuestions(\r\n      isChecked\r\n        ? [...selectedQuestions, questionId]\r\n        : selectedQuestions.filter((id) => id !== questionId)\r\n    );\r\n  };\r\n\r\n  function getUser() {\r\n    axios.get(url)\r\n      .then((response) => {\r\n        setPosts(response.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  async function sendDataToBackend() {\r\n    if (!cpfInput || selectedQuestions.length === 0) {\r\n      // Check for both conditions before showing error\r\n      setErrorType(\"both\");\r\n      setShowError(true);\r\n      return; // Prevent further execution if neither condition is met\r\n    }\r\n\r\n    try {\r\n      const cpf = infoPaciente;\r\n      const dataToSend = selectedQuestions.map((questionId) => ({\r\n        perguntaId: questionId,\r\n        pergunta: posts.find((post) => post._id === questionId).perguntas,\r\n      }));\r\n\r\n      const response = await axios.post(\"http://localhost:8004/selecao\", {\r\n        selectedQuestions: dataToSend,\r\n        infoPaciente: cpf,\r\n        _id: cpfInput,\r\n      });\r\n\r\n      console.log(\"Data sent to backend:\", response.data);\r\n      alert(\"Perguntas enviadas com sucesso!\");\r\n      setSelectedQuestions([]);\r\n      setCpfInput(\"\");\r\n      setInfoPaciente(null);\r\n    } catch (error) {\r\n      console.error(\"Error sending questions:\", error);\r\n      setErrorType(\"general\"); // Set error type to \"general\"\r\n      setShowError(true);\r\n      alert(\"Ocorreu um erro.Verifique se não há campo vazio.\");\r\n    }\r\n  }\r\n\r\n\r\n  return(\r\n    <div className=\"App\" >  \r\n    <div  className=\"Colum\"> \r\n      <div className=\"cont\">\r\n          <center><h2  >Selecionar Pergunta</h2></center>\r\n            <HStack spacing=\"8\">\r\n              <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n                <h4>Buscar Paciente</h4>      \r\n                <Input\r\n                  className=\"wrap-input\"\r\n                  id=\"cpfInput\"\r\n                  value={cpfInput}\r\n                  onChange={(e) => setCpfInput(e.target.value)}\r\n                />                \r\n                <p>\r\n                {showError && errorType === \"notFound\" && (\r\n                    <Alert className=\"alert\" status=\"error\">\r\n                      *Usuário não encontrado no banco de dados.\r\n                    </Alert>\r\n                  )}\r\n                </p>\r\n                {infoPaciente && (\r\n                  <div key={infoPaciente._id}>\r\n                    <p>CPF: {infoPaciente.cpf}</p>\r\n                    <p>Nome: {infoPaciente.name}</p>\r\n                  </div>\r\n                )} \r\n              </Box>\r\n              <Box w=\"35%\"  mr=\"5%\" mt=\"5%\">\r\n                <center><h4 htmlFor=\"cpf\">Cadastrar Paciente</h4></center>\r\n                  <CadastroPaciente/>\r\n              </Box>\r\n            </HStack>\r\n      </div><br></br><br></br>\r\n          <div className=\"perguntas\">\r\n            {posts.length === 0 ? (\r\n              <p>Carregando...</p>\r\n            ) : (\r\n              posts.map((post) => (\r\n                <div className=\"perguntas\" key={post._id}>\r\n                <p>{post.perguntas}</p>\r\n                <input \r\n                  type=\"checkbox\"\r\n                  id={post._id} \r\n                  value={post._id}\r\n                  checked={selectedQuestions.includes(post._id)}\r\n                  onChange={handlePergunta}\r\n                />\r\n              </div>\r\n              ))\r\n            )}\r\n          </div>\r\n          <div className=\"container-Finalizar-form-btn\">\r\n            <button className=\"Finalizar-form-btn\" \r\n            onClick={sendDataToBackend} >Finalizar</button>\r\n          </div>\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n\r\n\r\n/*import {Box,HStack,Input, Alert} from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport CadastroPaciente from \"./CadastroP/cadasPaciente\";\r\nimport './CadastroP/cadasPac.css';\r\nimport \"./App.css\"\r\n\r\n\r\nfunction App(){\r\n\r\n  \r\n  const url = \"http://localhost:8004/questions\";\r\n  \r\n  const [posts, setPosts] = useState('');\r\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\r\n  const [cpfInput, setCpfInput] = useState(\"\");\r\n  const [infoPaciente, setInfoPaciente] = useState();\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  function searchByCpf(cpf) {\r\n    setShowError(false);\r\n  \r\n    axios\r\n      .get(`http://localhost:8004/cadastro?cpf=${cpf}`)\r\n      .then((response) => {\r\n        const data = response.data;\r\n        if (data.length > 0) {\r\n         \r\n          const matchingResult = data.find((item) => item.cpf === cpf);\r\n  \r\n          if (matchingResult) {\r\n            setInfoPaciente(matchingResult); \r\n           \r\n          } else {\r\n            setShowError(true); \r\n          }\r\n        } else {\r\n          setShowError(true); \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setShowError(true);\r\n      });\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if (cpfInput) {\r\n      searchByCpf(cpfInput);\r\n    }\r\n  }, [cpfInput]);\r\n\r\n\r\n\r\n  const handlePergunta = (e) => {\r\n    const isChecked = e.target.checked;\r\n    const questionId = e.target.value;\r\n    \r\n    setSelectedQuestions(\r\n      isChecked\r\n        ? [...selectedQuestions, questionId,]\r\n        : selectedQuestions.filter((id) => id !== questionId,)\r\n    );\r\n  };\r\n\r\n\r\n\r\n  function getUser() {\r\n    axios.get(url)\r\n      .then((response) => {\r\n        setPosts(response.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getUser()\r\n  }, []);\r\n\r\n\r\n  async function sendDataToBackend() {\r\n    try { \r\n          \r\n      const cpf = infoPaciente\r\n      const dataToSend = selectedQuestions.map((questionId) => ({\r\n        perguntaId: questionId,\r\n        pergunta: posts.find((post) => post._id === questionId).perguntas,\r\n      \r\n      }));\r\n\r\n      const response = await axios.post(\"http://localhost:8004/selecao\", {\r\n        selectedQuestions: dataToSend,\r\n        infoPaciente:cpf,\r\n        _id:cpfInput\r\n      });\r\n\r\n        console.log(\"Data sent to backend:\", response.data);\r\n        alert(\"Perguntas enviadas com sucesso!\");\r\n        setSelectedQuestions([]);\r\n        setCpfInput(\"\");\r\n        setInfoPaciente(null); \r\n    } catch (error) {\r\n      console.error(\"Error sending questions:\", error);\r\n      alert(\"Ocorreu um erro ao enviar as perguntas. Tente novamente mais tarde.\");\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className=\"App\" >  \r\n    <div  className=\"Colum\"> \r\n      <div className=\"cont\">\r\n          <center><h2  >Selecionar Pergunta</h2></center>\r\n            <HStack spacing=\"8\">\r\n              <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n                <h4>Buscar Paciente</h4>      \r\n                <Input\r\n                  className=\"wrap-input\"\r\n                  id=\"cpfInput\"\r\n                  value={cpfInput}\r\n                  onChange={(e) => setCpfInput(e.target.value)}\r\n                />                \r\n                <p>\r\n                  {showError && (\r\n                    <Alert className=\"alert\" status=\"error\">*Usuário não encontrado no banco de dados.</Alert>\r\n                  )}\r\n                </p>\r\n                {infoPaciente && (\r\n                  <div key={infoPaciente._id}>\r\n                    <p>CPF: {infoPaciente.cpf}</p>\r\n                    <p>Nome: {infoPaciente.name}</p>\r\n                  </div>\r\n                )} \r\n              </Box>\r\n              <Box w=\"35%\"  mr=\"5%\" mt=\"5%\">\r\n                <center><h4 htmlFor=\"cpf\">Cadastrar Paciente</h4></center>\r\n                  <CadastroPaciente/>\r\n              </Box>\r\n            </HStack>\r\n      </div><br></br><br></br>\r\n          <div className=\"perguntas\">\r\n            {posts.length === 0 ? (\r\n              <p>Carregando...</p>\r\n            ) : (\r\n              posts.map((post) => (\r\n                <div className=\"perguntas\" key={post._id}>\r\n                <p>{post.perguntas}</p>\r\n                <input \r\n                  type=\"checkbox\"\r\n                  id={post._id} \r\n                  value={post._id}\r\n                  checked={selectedQuestions.includes(post._id)}\r\n                  onChange={handlePergunta}\r\n                />\r\n              </div>\r\n              ))\r\n            )}\r\n          </div>\r\n          <div className=\"container-Finalizar-form-btn\">\r\n            <button className=\"Finalizar-form-btn\" \r\n            onClick={sendDataToBackend} >Finalizar</button>\r\n          </div>\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App*/"],"mappings":"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S,EAAC,oBAAoB;UACtCkB,OAAO,EAAE3B,iBAAkB;UAAAU,QAAA,EAAE;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACnD,EAAA,CAhKQD,GAAG;AAAAkE,EAAA,GAAHlE,GAAG;AAkKZ,eAAeA,GAAG;;AAIlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvKA,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}